package lib.sintactico;

import analizador.ParseException;
import analizador.Token;
import analizador.minilengcompiler;
import analizador.minilengcompilerConstants;

public class PanicMode implements minilengcompilerConstants {
	
	private static int contadorErrores = 0;
	
	public static void iniciar(ParseException e, String mensaje, int tipoToken) {
		contadorErrores++;
		
		System.err.println("MiniLeng: ERROR SINTÁCTICO (línea " + e.currentToken.next.beginLine +
				", columna " + (e.currentToken.next.beginColumn) + "): Token incorrecto: '" +
                e.currentToken.next + "'. " + mensaje);
		
		System.err.println("PANIC MODE: Iniciado panic mode");
		
		
		// Descarta la entrada hasta encontrar un token de tipo tipoToken
		
		Token t = minilengcompiler.getNextToken();
		while(t.kind != tipoToken && t.kind != EOF) {
			System.out.println("> PANIC MODE: Warning: descartado token: " + t.image);
			t = minilengcompiler.getNextToken();
		}

		
		if (t.kind == EOF) {
			System.out.println("> PANIC MODE: Fila, columna: Se ha terminado el fichero. Terminado panic mode");
		}
		
		else {
			System.out.println("> PANIC MODE: Fila, columna: Se ha terminado el fichero. Terminado panic mode");
		}
		
		
		System.err.println("PANIC MODE: Terminado panic mode");
	}
	
	
	public static int getContadorErrores() {
		return contadorErrores;
	}
}
